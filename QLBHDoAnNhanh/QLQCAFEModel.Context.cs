//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLQCAFE
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QLQCOF5Entities : DbContext
    {
        public QLQCOF5Entities()
            : base("name=QLQCOF5Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BAN> BANs { get; set; }
        public virtual DbSet<DANHMUC> DANHMUCs { get; set; }
        public virtual DbSet<HOADON> HOADONs { get; set; }
        public virtual DbSet<MONAN> MONANs { get; set; }
    
        public virtual int DeleteBAN(string iDBAN, string tENBAN, string tRANGTHAIBAN)
        {
            var iDBANParameter = iDBAN != null ?
                new ObjectParameter("IDBAN", iDBAN) :
                new ObjectParameter("IDBAN", typeof(string));
    
            var tENBANParameter = tENBAN != null ?
                new ObjectParameter("TENBAN", tENBAN) :
                new ObjectParameter("TENBAN", typeof(string));
    
            var tRANGTHAIBANParameter = tRANGTHAIBAN != null ?
                new ObjectParameter("TRANGTHAIBAN", tRANGTHAIBAN) :
                new ObjectParameter("TRANGTHAIBAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBAN", iDBANParameter, tENBANParameter, tRANGTHAIBANParameter);
        }
    
        public virtual int DeleteDANHMUC(string iDDANHMUC, string tENDANHMUC)
        {
            var iDDANHMUCParameter = iDDANHMUC != null ?
                new ObjectParameter("IDDANHMUC", iDDANHMUC) :
                new ObjectParameter("IDDANHMUC", typeof(string));
    
            var tENDANHMUCParameter = tENDANHMUC != null ?
                new ObjectParameter("TENDANHMUC", tENDANHMUC) :
                new ObjectParameter("TENDANHMUC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDANHMUC", iDDANHMUCParameter, tENDANHMUCParameter);
        }
    
        public virtual int DeleteHOADON(string iDHOADON)
        {
            var iDHOADONParameter = iDHOADON != null ?
                new ObjectParameter("IDHOADON", iDHOADON) :
                new ObjectParameter("IDHOADON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteHOADON", iDHOADONParameter);
        }
    
        public virtual int DeleteMONAN(string iDMON)
        {
            var iDMONParameter = iDMON != null ?
                new ObjectParameter("IDMON", iDMON) :
                new ObjectParameter("IDMON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMONAN", iDMONParameter);
        }
    
        public virtual ObjectResult<GetBAN_Result> GetBAN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBAN_Result>("GetBAN");
        }
    
        public virtual ObjectResult<GetDANHMUC_Result> GetDANHMUC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDANHMUC_Result>("GetDANHMUC");
        }
    
        public virtual ObjectResult<GetHOADON_Result> GetHOADON()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHOADON_Result>("GetHOADON");
        }
    
        public virtual ObjectResult<GetMONAN_Result> GetMONAN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMONAN_Result>("GetMONAN");
        }
    
        public virtual int InserDANHMUC(string iDDANHMUC, string tENDANHMUC)
        {
            var iDDANHMUCParameter = iDDANHMUC != null ?
                new ObjectParameter("IDDANHMUC", iDDANHMUC) :
                new ObjectParameter("IDDANHMUC", typeof(string));
    
            var tENDANHMUCParameter = tENDANHMUC != null ?
                new ObjectParameter("TENDANHMUC", tENDANHMUC) :
                new ObjectParameter("TENDANHMUC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InserDANHMUC", iDDANHMUCParameter, tENDANHMUCParameter);
        }
    
        public virtual int InsertBAN(string iDBAN, string tENBAN, string tRANGTHAIBAN)
        {
            var iDBANParameter = iDBAN != null ?
                new ObjectParameter("IDBAN", iDBAN) :
                new ObjectParameter("IDBAN", typeof(string));
    
            var tENBANParameter = tENBAN != null ?
                new ObjectParameter("TENBAN", tENBAN) :
                new ObjectParameter("TENBAN", typeof(string));
    
            var tRANGTHAIBANParameter = tRANGTHAIBAN != null ?
                new ObjectParameter("TRANGTHAIBAN", tRANGTHAIBAN) :
                new ObjectParameter("TRANGTHAIBAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBAN", iDBANParameter, tENBANParameter, tRANGTHAIBANParameter);
        }
    
        public virtual int InsertHOADON(string iDHOADON, string iDBAN, Nullable<System.DateTime> tHOIGIANTOI, Nullable<System.DateTime> tHOIGIANDI)
        {
            var iDHOADONParameter = iDHOADON != null ?
                new ObjectParameter("IDHOADON", iDHOADON) :
                new ObjectParameter("IDHOADON", typeof(string));
    
            var iDBANParameter = iDBAN != null ?
                new ObjectParameter("IDBAN", iDBAN) :
                new ObjectParameter("IDBAN", typeof(string));
    
            var tHOIGIANTOIParameter = tHOIGIANTOI.HasValue ?
                new ObjectParameter("THOIGIANTOI", tHOIGIANTOI) :
                new ObjectParameter("THOIGIANTOI", typeof(System.DateTime));
    
            var tHOIGIANDIParameter = tHOIGIANDI.HasValue ?
                new ObjectParameter("THOIGIANDI", tHOIGIANDI) :
                new ObjectParameter("THOIGIANDI", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertHOADON", iDHOADONParameter, iDBANParameter, tHOIGIANTOIParameter, tHOIGIANDIParameter);
        }
    
        public virtual int InsertMONAN(string iDMON, string tENMON, Nullable<decimal> gIATIEN, byte[] aNH)
        {
            var iDMONParameter = iDMON != null ?
                new ObjectParameter("IDMON", iDMON) :
                new ObjectParameter("IDMON", typeof(string));
    
            var tENMONParameter = tENMON != null ?
                new ObjectParameter("TENMON", tENMON) :
                new ObjectParameter("TENMON", typeof(string));
    
            var gIATIENParameter = gIATIEN.HasValue ?
                new ObjectParameter("GIATIEN", gIATIEN) :
                new ObjectParameter("GIATIEN", typeof(decimal));
    
            var aNHParameter = aNH != null ?
                new ObjectParameter("ANH", aNH) :
                new ObjectParameter("ANH", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMONAN", iDMONParameter, tENMONParameter, gIATIENParameter, aNHParameter);
        }
    
        public virtual ObjectResult<SearchMONAN_Result> SearchMONAN(string iDMON)
        {
            var iDMONParameter = iDMON != null ?
                new ObjectParameter("IDMON", iDMON) :
                new ObjectParameter("IDMON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchMONAN_Result>("SearchMONAN", iDMONParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateBAN(string iDBAN, string tENBAN, string tRANGTHAIBAN)
        {
            var iDBANParameter = iDBAN != null ?
                new ObjectParameter("IDBAN", iDBAN) :
                new ObjectParameter("IDBAN", typeof(string));
    
            var tENBANParameter = tENBAN != null ?
                new ObjectParameter("TENBAN", tENBAN) :
                new ObjectParameter("TENBAN", typeof(string));
    
            var tRANGTHAIBANParameter = tRANGTHAIBAN != null ?
                new ObjectParameter("TRANGTHAIBAN", tRANGTHAIBAN) :
                new ObjectParameter("TRANGTHAIBAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBAN", iDBANParameter, tENBANParameter, tRANGTHAIBANParameter);
        }
    
        public virtual int UpdateDANHMUC(string iDDANHMUC, string tENDANHMUC)
        {
            var iDDANHMUCParameter = iDDANHMUC != null ?
                new ObjectParameter("IDDANHMUC", iDDANHMUC) :
                new ObjectParameter("IDDANHMUC", typeof(string));
    
            var tENDANHMUCParameter = tENDANHMUC != null ?
                new ObjectParameter("TENDANHMUC", tENDANHMUC) :
                new ObjectParameter("TENDANHMUC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDANHMUC", iDDANHMUCParameter, tENDANHMUCParameter);
        }
    
        public virtual int UpdateHOADON(string iDHOADON, string iDBAN, Nullable<System.DateTime> tHOIGIANTOI, Nullable<System.DateTime> tHOIGIANDI)
        {
            var iDHOADONParameter = iDHOADON != null ?
                new ObjectParameter("IDHOADON", iDHOADON) :
                new ObjectParameter("IDHOADON", typeof(string));
    
            var iDBANParameter = iDBAN != null ?
                new ObjectParameter("IDBAN", iDBAN) :
                new ObjectParameter("IDBAN", typeof(string));
    
            var tHOIGIANTOIParameter = tHOIGIANTOI.HasValue ?
                new ObjectParameter("THOIGIANTOI", tHOIGIANTOI) :
                new ObjectParameter("THOIGIANTOI", typeof(System.DateTime));
    
            var tHOIGIANDIParameter = tHOIGIANDI.HasValue ?
                new ObjectParameter("THOIGIANDI", tHOIGIANDI) :
                new ObjectParameter("THOIGIANDI", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateHOADON", iDHOADONParameter, iDBANParameter, tHOIGIANTOIParameter, tHOIGIANDIParameter);
        }
    
        public virtual int UpdateMONAN(string iDMON, string tENMON, Nullable<decimal> gIATIEN, byte[] aNH)
        {
            var iDMONParameter = iDMON != null ?
                new ObjectParameter("IDMON", iDMON) :
                new ObjectParameter("IDMON", typeof(string));
    
            var tENMONParameter = tENMON != null ?
                new ObjectParameter("TENMON", tENMON) :
                new ObjectParameter("TENMON", typeof(string));
    
            var gIATIENParameter = gIATIEN.HasValue ?
                new ObjectParameter("GIATIEN", gIATIEN) :
                new ObjectParameter("GIATIEN", typeof(decimal));
    
            var aNHParameter = aNH != null ?
                new ObjectParameter("ANH", aNH) :
                new ObjectParameter("ANH", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMONAN", iDMONParameter, tENMONParameter, gIATIENParameter, aNHParameter);
        }
    }
}
